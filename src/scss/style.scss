@use "@fontsource/karla/scss/mixins" as Karla;
@include Karla.fontFaceCustom();

$background: #1A1E24;
$background--secondary: #252A34;
$background--tertiary: #3A3E4C;
$foreground: #D3D6D6;
$foreground--secondary: #a6a6a6;
$borders: #2B303A;
$shadow: #131518;
$shadow--secondary: #969696;
$primary: #FF88FF;
$status--checking: #ffd188;
$status--online: #88ff8e;
$status--offline: #ff8888;
$status--glow: 0 0 5px;

body {
  margin: 0;
  background: $background;
  font-family: "Karla", sans-serif;
}

#header {
  color: $foreground;
}

#container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
}

#app-grid {
  width: 700px;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 10px;
}

a {
  text-decoration: none;
}

.service-card {
  display: grid;
  grid-gap: 10px;
  justify-content: center;
  align-items: center;

  background-color: $background--secondary;
  border: 1px solid $borders;
  border-radius: 5px;
  padding: 10px;
  transition: all 0.2s ease;
  cursor: pointer;
  filter: drop-shadow(3px 3px 3px $shadow);

  &:hover,
  &:active {
    background-color: $foreground;
    > .caption {
      color: $background;
    }
    > .icon {
      filter: none;
    }
  }

  &:hover {
    transform: scale(1.03);
  }

  &:active {
    transform: scale(0.97);
    box-shadow: inset 0 0px 19px 3px $shadow--secondary;
  }

  > .caption {
    margin: auto;
    color: $foreground;
    font-size: 10pt;
  }

  > .status {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 5px;
    font-size: 8pt;

    &::before {
      content: "";
      width: 8px;
      height: 8px;
      border-radius: 100%;
    }

    &.online {
      color: $status--online;
      &::before {
        background-color: $status--online;
        box-shadow: $status--glow $status--online;
      }
    }

    &.offline {
      color: $status--offline;
      &::before {
        background-color: $status--offline;
        box-shadow: $status--glow $status--offline;
      }
    }

    &.checking {
      color: $status--checking;
      &::before {
        background-color: $status--checking;
        box-shadow: $status--glow $status--checking;
      }
    }
  }

  > .icon {
    width: 50px;
    height: 50px;
    margin: auto;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    filter: grayscale(1) contrast(50%);
  }

  &[data-service-id="asf"] > .icon {
    background-image: url("../img/logos/asf.png");
  }
  &[data-service-id="hass"] > .icon {
    background-image: url("../img/logos/hass.svg");
  }
  &[data-service-id="bridge"] > .icon {
    background-image: url("../img/logos/homebridge.svg");
  }
  &[data-service-id="pihole"] > .icon {
    background-image: url("../img/logos/pihole.svg");
  }
  &[data-service-id="portainer"] > .icon {
    background-image: url("../img/logos/portainer.svg");
  }
  &[data-service-id="unifi"] > .icon {
    background-image: url("../img/logos/unifi.svg");
  }
}

#server-time {
  font-size: 8pt;
  color: #969696;
  margin: auto;
  position: absolute;
  bottom: 40px;
  left: 50%;
  transform: translateX(-50%);
}

.fade-in-up {
  opacity: 0;
  animation: fade-in-up 0.2s ease;
}

@keyframes fade-in-up {
  from {
    opacity: 0;
    transform: translateY(14px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
